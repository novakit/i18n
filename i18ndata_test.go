// Generated by github.com/novakit/binfs

package i18n_test

import (
	"time"

	"github.com/novakit/binfs"
)

var (
	binfs0e8c471d3df77e73001fc4d40300a217022bf101 = binfs.Chunk{
		Path: []string{"testdata", "locales", "en-GB.a.yml"},
		Date: time.Unix(1530876470, 0),
		Data: []byte{
			0x74, 0x69, 0x74, 0x6c, 0x65, 0x3a, 0x0a, 0x20, 0x20, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x3a, 0x20, 0x22, 0x65, 0x6e, 0x48, 0x45, 0x4c, 0x4c, 0x4f, 0x7b, 0x7b, 0x31, 0x7d, 0x7d, 0x22, 0x0a,
		},
	}
	binfsa30d7bd8bb5eb2c4e5f9864a386307681118f75f = binfs.Chunk{
		Path: []string{"testdata", "locales", "en-GB.b.yaml"},
		Date: time.Unix(1530876481, 0),
		Data: []byte{
			0x74, 0x69, 0x74, 0x6c, 0x65, 0x3a, 0x0a, 0x20, 0x20, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x32, 0x3a, 0x20, 0x22, 0x65, 0x6e, 0x7b, 0x7b, 0x32, 0x7d, 0x7d, 0x7b, 0x7b, 0x31, 0x7d, 0x7d, 0x22, 0x0a,
		},
	}
	binfsa5f34ee52be5fb5d9754604f0d53d4497f72e911 = binfs.Chunk{
		Path: []string{"testdata", "locales", "zh-CN.a.yml"},
		Date: time.Unix(1530876527, 0),
		Data: []byte{
			0x74, 0x69, 0x74, 0x6c, 0x65, 0x3a, 0x0a, 0x20, 0x20, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x32, 0x3a, 0x20, 0x22, 0x7a, 0x68, 0x7b, 0x7b, 0x32, 0x7d, 0x7d, 0x7b, 0x7b, 0x31, 0x7d, 0x7d, 0x22, 0x0a,
		},
	}
	binfseb127ad9e955ed88595edd7fa1ddde43b5354810 = binfs.Chunk{
		Path: []string{"testdata", "locales", "zh-CN.b.yml"},
		Date: time.Unix(1530876535, 0),
		Data: []byte{
			0x74, 0x69, 0x74, 0x6c, 0x65, 0x3a, 0x0a, 0x20, 0x20, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x3a, 0x20, 0x22, 0x7a, 0x68, 0x48, 0x45, 0x4c, 0x4c, 0x4f, 0x7b, 0x7b, 0x31, 0x7d, 0x7d, 0x22, 0x0a,
		},
	}
	binfsdc2c29db7731129e4bed7ea93afeef5eb2ac3c9a = binfs.Chunk{
		Path: []string{"testdata", "views", "index.html"},
		Date: time.Unix(1530876768, 0),
		Data: []byte{
			0x7b, 0x7b, 0x20, 0x54, 0x20, 0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x22, 0x20, 0x22, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0x20, 0x7d, 0x7d, 0x0a, 0x0a, 0x7b,
			0x7b, 0x20, 0x54, 0x20, 0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x32, 0x22, 0x20, 0x22, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x22, 0x20, 0x22, 0x77, 0x6f, 0x72, 0x6c,
			0x64, 0x22, 0x7d, 0x7d, 0x0a, 0x0a, 0x7b, 0x7b, 0x20, 0x2e, 0x5f, 0x69, 0x31, 0x38, 0x6e, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x20, 0x7d, 0x7d,
		},
	}
)

func init() {
	binfs.Load(&binfs0e8c471d3df77e73001fc4d40300a217022bf101)
	binfs.Load(&binfsa30d7bd8bb5eb2c4e5f9864a386307681118f75f)
	binfs.Load(&binfsa5f34ee52be5fb5d9754604f0d53d4497f72e911)
	binfs.Load(&binfseb127ad9e955ed88595edd7fa1ddde43b5354810)
	binfs.Load(&binfsdc2c29db7731129e4bed7ea93afeef5eb2ac3c9a)
}
